<?xml version="1.0" encoding="utf-8"?>
<mx:Canvas xmlns:mx="http://www.adobe.com/2006/mxml"
           xmlns:button="com.broceliand.ui.button.*"
           xmlns:premiumsymb="com.broceliand.ui.premiumsymbol.*" clipContent="false">
   <premiumsymb:PTPremiumSymbolButton id="symbol"/>
   
   <mx:Script>
      <![CDATA[
         import com.broceliand.ui.tooltip.PTGenericTooltip;
         import com.broceliand.ui.util.ColorPalette;
         import com.broceliand.util.BroLocale;
         
         private var _skin:uint;
         private var _clickable:Boolean;
         private var _withOver:Boolean;
         private var _neverVisible:Boolean;
         private var _paddingTop:Number;
         
         override protected function commitProperties():void{
            super.commitProperties();
            if (symbol) {
               symbol.withOver = _withOver;
               symbol.clickable = _clickable;
               symbol.skin = _skin;
               symbol.setStyle("top",_paddingTop);
            }
            
         }
         
         public function get withOver():Boolean {
            return _withOver;
         }
         
         public function set withOver(value:Boolean):void {
            if (_withOver != value) {
               _withOver = value;
               
            }
         }
         
         public function get clickable():Boolean {
            return _clickable;
         }
         
         public function set clickable(value:Boolean):void {
            if (_clickable != value) {
               _clickable = value;
               
            }
         }
         
         public function get skin():uint {
            return _skin;
         }
         
         public function set skin(value:uint):void {
            if (_skin != value) {
               _skin = value;
            }
         }
         
         private function onClick(event:Event):void {
            if (symbol) {
               symbol.onClick(event);
            }
         }
         
         public function set paddingTop(value:Number):void {
            _paddingTop = value;
            invalidateProperties();
         }
         
         public function isCurrentTargetOfEvent(event:MouseEvent):Boolean {
            return event.target == this || event.target == symbol;
         }
      ]]>
   </mx:Script>  
</mx:Canvas>
